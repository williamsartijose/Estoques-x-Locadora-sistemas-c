using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace Locadora
{
    public partial class frmLocacao : Form
    {
        public frmLocacao()
        {
            InitializeComponent();
        }



        private void frmLocacao_Load(object sender, EventArgs e)
        {
            //Carregar as caixas combo de cliente
            Camadas.BLL.Cliente bllCliente = new Camadas.BLL.Cliente();
            cmbCliente.DisplayMember = "nome";  // nome que ele mostra na combo
            cmbCliente.ValueMember = "id"; // e o valor de retorno ao selecionar um item
            cmbCliente.DataSource = bllCliente.Select();  // carrega a combo com os dados de clientes

            //carregar a combo Filme
            Camadas.BLL.Filme bllFilme = new Camadas.BLL.Filme();
            cmbFilme.DisplayMember = "titulo";
            cmbFilme.ValueMember = "id";
            cmbFilme.DataSource = bllFilme.Select(); 

            // Carregar dados de Locação e Itens de Locação
            Camadas.BLL.Locacao bllLoc = new Camadas.BLL.Locacao();
            Camadas.BLL.Itens_Locacao bllItLoc = new Camadas.BLL.Itens_Locacao();

            dtgLocacao.DataSource = bllLoc.Select(); //carega todas as locações  na grid view de locações

            //pegar o valor da primeira locação e armazena nos controles de locação
            lblIdLoc.Text = dtgLocacao.Rows[0].Cells["id"].Value.ToString();
            txtData.Text = dtgLocacao.Rows[0].Cells["data"].Value.ToString();
            txtIdCliente.Text = dtgLocacao.Rows[0].Cells["cliente_id"].Value.ToString();

            //seleciona o codigo da locação e filta os itens da locação
            int idLoc = Convert.ToInt32(lblIdLoc.Text);
            dtgItensLocacao.DataSource = bllItLoc.SelectByLocacao(idLoc);
        }

        private void btnSair_Click(object sender, EventArgs e)
        {
            this.Close();
        }

        private void btnLocNovo_Click(object sender, EventArgs e)
        {
            txtData.Text = DateTime.Now.ToShortDateString();
            txtData.Enabled = true;
            txtIdCliente.Enabled = true;
            btnLocGravar.Enabled = true;
            btnLocNovo.Enabled = false;
            lblIdLoc.Text = "-1";
            txtData.Text = DateTime.Now.ToShortDateString();
            txtIdCliente.Text = ""; 
            txtIdCliente.Focus();
            dtgItensLocacao.DataSource = ""; 
            
        }

        private void btnLocGravar_Click(object sender, EventArgs e)
        {
            Camadas.BLL.Locacao bllLoc = new Camadas.BLL.Locacao();
            Camadas.MODEL.Locacao locacao = new Camadas.MODEL.Locacao();
            List<Camadas.MODEL.Locacao> lstLocacao = new List<Camadas.MODEL.Locacao>(); 

            //atribui os dos controles da tela para a lista, para serem gravados
            locacao.id = Convert.ToInt32(lblIdLoc.Text);
            locacao.data = Convert.ToDateTime(txtData.Text);
            locacao.cliente_id = Convert.ToInt32(txtIdCliente.Text);

            bllLoc.Insert(locacao); //inserindo a locação no banco de dados

            lstLocacao = bllLoc.Select(); //atualiza a lista para apresentar os dados na gridview
            dtgLocacao.DataSource = lstLocacao; //atribui  lista a gridview


            txtData.Enabled = false;
            txtIdCliente.Enabled = false;

            //pegar o valor do último registrou, ou seja, o ultimo que acabou de ser inserido
            lblIdLoc.Text = lstLocacao[lstLocacao.Count - 1].id.ToString(); ;
            txtData.Text = lstLocacao[lstLocacao.Count - 1].data.ToString();
            txtIdCliente.Text = lstLocacao[lstLocacao.Count - 1].cliente_id.ToString();

            btnLocNovo.Enabled = true;
            btnLocGravar.Enabled = false; 

        }

        private void dtgLocacao_CellContentClick(object sender, DataGridViewCellEventArgs e)
        {
            
        }

        private void dtgLocacao_RowStateChanged(object sender, DataGridViewRowStateChangedEventArgs e)
        {
            if (dtgLocacao.SelectedRows.Count > 0)
            {
                lblIdLoc.Text = dtgLocacao.SelectedRows[0].Cells["id"].Value.ToString();
                txtData.Text = dtgLocacao.SelectedRows[0].Cells["data"].Value.ToString();
                txtIdCliente.Text = dtgLocacao.SelectedRows[0].Cells["cliente_id"].Value.ToString();
                
                Camadas.BLL.Itens_Locacao bllItLoc = new Camadas.BLL.Itens_Locacao();
                int idLoc = Convert.ToInt32(lblIdLoc.Text);
                dtgItensLocacao.DataSource = bllItLoc.SelectByLocacao(idLoc);
            }
        }

        private void btnItLocNovo_Click(object sender, EventArgs e)
        {
            if (dtgItensLocacao.RowCount < 3)
            {
                txtFilme.Enabled = true;
                btnItLocNovo.Enabled = false;
                btnItLocGravar.Enabled = true;

                txtFilme.Focus();
            }
            else MessageBox.Show("No máximo podem ser locados 3 filmes");

        }

        private void btnItLocGravar_Click(object sender, EventArgs e)
        {
            //carregar os objetos necessários para manter os dados de itens de locacao
            Camadas.BLL.Itens_Locacao bllItLoc = new Camadas.BLL.Itens_Locacao();
            Camadas.MODEL.Itens_Locacao item_locacao = new Camadas.MODEL.Itens_Locacao();
            List<Camadas.MODEL.Itens_Locacao> lstItLoc = new List<Camadas.MODEL.Itens_Locacao>();

            //preencher objeto item_locação com dados oriundos do formulário
            item_locacao.locacao_id = Convert.ToInt32(lblIdLoc.Text);
            item_locacao.filme_id = Convert.ToInt32(txtFilme.Text);
            item_locacao.status = 'E';

         
                bllItLoc.Insert(item_locacao); // insere o item da locação no banco de dados
                int idLoc = Convert.ToInt32(lblIdLoc.Text);
                lstItLoc = bllItLoc.SelectByLocacao(idLoc);  //filtra os filmes locados de uma determinada locacao
            
           
            dtgItensLocacao.DataSource = 
            
            dtgItensLocacao.DataSource = lstItLoc;

            lblIdItLoc.Text = "-1";
            txtFilme.Text = "";
            lblStatus.Text = "";

            txtFilme.Enabled = false;
            btnItLocGravar.Enabled = false;
            btnItLocNovo.Enabled = true;


        }

        private void panel1_Paint(object sender, PaintEventArgs e)
        {

        }

        private void dtgItensLocacao_CellContentClick(object sender, DataGridViewCellEventArgs e)
        {

        }

        private void cmbCliente_SelectedIndexChanged(object sender, EventArgs e)
        {
              txtIdCliente.Text = cmbCliente.SelectedValue.ToString();
    
        }

        private void txtIdCliente_Leave(object sender, EventArgs e)
        {
            try
            {
                cmbCliente.SelectedValue = Convert.ToInt32(txtIdCliente.Text);
            }
            catch 
            {
                MessageBox.Show("Cliente não cadastrado...");
                txtIdCliente.Focus();
            }
            
        }

        private void txtIdCliente_TextChanged(object sender, EventArgs e)
        {

        }

        private void cmbFilme_SelectedIndexChanged(object sender, EventArgs e)
        {
            txtFilme.Text = cmbFilme.SelectedValue.ToString(); 
        }

        private void txtFilme_Leave(object sender, EventArgs e)
        {
            try
            {
                cmbFilme.SelectedValue = Convert.ToInt32(txtFilme.Text);
            }
            catch 
            {
                MessageBox.Show("Filme não cadastrado...");
                txtFilme.Focus();
               
            }
        }
    }
}